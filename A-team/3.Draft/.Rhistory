cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]
covarience_matrix[3,3]
mini_vector <- NULL
for (i in 1:number_of_shares)
{
mini <- min(var_data[,i], na.rm = TRUE)
mini_vector <- c(mini_vector, mini)
}
mini_vector
mini_vector[1]
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
mini_vector*starting_values
mini_vector%*%starting_values
?optim
optim(starting_values,function(weights) mini_vector%*%weigths )
optim(starting_values,function(starting_values) mini_vector%*%starting_values )
mini_vector%*%starting_values
optim(starting_values,function(starting_values) mini_vector%*%starting_values)
xxx = optim(starting_values,function(starting_values) mini_vector%*%starting_values)
xxx$par
mini_vector%*%xxx$par
xxx = optim(starting_values,function(starting_values) mini_vector%*%starting_values, control$fnscale=FALSE)
xxx = optim(starting_values,function(starting_values) -1*mini_vector%*%starting_values)
mini_vector%*%xxx$par
mini_vector%*%starting_values
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j])
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]   #### matches excel
covarience_matrix[2,2]   #### ditto
covarience_matrix[3,3]   #### ditto
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
starting_values
starting_values%*%covarience_matrix%*%starting_values
t(starting_values)%*%covarience_matrix%*%starting_values
(starting_values)%*%covarience_matrix%*%t(starting_values)
starting_values%*%covarience_matrix%*%t(starting_value)s
starting_values%*%covarience_matrix%*%t(starting_values)
mvp = optim(starting_values,
function(starting_values) starting_values%*%covarience_matrix%*%starting_values)
mvp
mvp$value
starting_values%*%covarience_matrix%*%starting_values
mvp$par%*%covarience_matrix%*%mvp$par
setwd("~/GitHub/a-team/A-team/3.Draft")
library(dplyr)
share_data=read.csv("Top40_28Jun2018_no_purple_or_orange.csv", header= TRUE, sep=";")
summary(share_data)
str(share_data)
View(share_data)
cols=ncol(share_data)
cols
for (i in 1:cols)
{
share_data[,i] <- recode_factor(share_data[,i], "#N/A N/A" = NA_character_)
}
View(share_data)
summary(share_data)
str(share_data) #### fixed NA
for (i in 2:cols) ### 2 because first column are dates
{
x= share_data[,i]
share_data[,i] <- as.numeric(as.character(sub("," , ".", x)))
}
View(share_data)
summary(share_data)
str(share_data)
share_data[,1] <- as.Date(share_data[,1])
str(share_data)   #### coding dates as dates --> not sure I'll actually need this but just incase
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
select_shares = sample(0:(numb_dif_Share-1), 40)
select_shares
sequence_shares = c(1,(select_shares*3+2), (select_shares*3+3), (select_shares*3+4))
sequence_shares <- sort(sequence_shares, decreasing = FALSE)
sequence_shares
share_data_final <- share_data[,sequence_shares]
View(share_data_final)
share_data <- share_data_final #####!!!!!!!
length=nrow(share_data)
length
in_sample_length=0.8*length
in_sample_length
in_sample_length <- floor(in_sample_length)
in_sample_length
out_sample_start=in_sample_length+1
out_sample_start
in_sample=share_data[1:in_sample_length,]
View(in_sample)
out_sample=share_data[out_sample_start:length,]
View(out_sample)
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j])
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
setwd("~/GitHub/a-team/A-team/3.Draft")
library(dplyr)
share_data=read.csv("Top40_28Jun2018_no_purple_or_orange.csv", header= TRUE, sep=";")
summary(share_data)
str(share_data)
View(share_data)
cols=ncol(share_data)
cols
for (i in 1:cols)
{
share_data[,i] <- recode_factor(share_data[,i], "#N/A N/A" = NA_character_)
}
View(share_data)
summary(share_data)
str(share_data) #### fixed NA
for (i in 2:cols) ### 2 because first column are dates
{
x= share_data[,i]
share_data[,i] <- as.numeric(as.character(sub("," , ".", x)))
}
View(share_data)
summary(share_data)
str(share_data)
share_data[,1] <- as.Date(share_data[,1])
str(share_data)   #### coding dates as dates --> not sure I'll actually need this but just incase
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
select_shares = sample(0:(numb_dif_Share-1), 40)
select_shares
sequence_shares = c(1,(select_shares*3+2), (select_shares*3+3), (select_shares*3+4))
sequence_shares <- sort(sequence_shares, decreasing = FALSE)
sequence_shares
share_data_final <- share_data[,sequence_shares]
View(share_data_final)
share_data <- share_data_final #####!!!!!!!
length=nrow(share_data)
length
in_sample_length=0.8*length
in_sample_length
in_sample_length <- floor(in_sample_length)
in_sample_length
out_sample_start=in_sample_length+1
out_sample_start
in_sample=share_data[1:in_sample_length,]
View(in_sample)
out_sample=share_data[out_sample_start:length,]
View(out_sample)
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j],  use = "everything")
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]   #### matches excel
covarience_matrix[2,2]   #### ditto
covarience_matrix[3,3]   #### ditto
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
starting_values
starting_values%*%covarience_matrix%*%starting_values
?cov
cov(var_data)
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j],  use = "na.or.complete")
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]   #### matches excel
covarience_matrix[2,2]   #### ditto
covarience_matrix[3,3]   #### ditto
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
starting_values
starting_values%*%covarience_matrix%*%starting_values
mvp = optim(starting_values,
function(starting_values) starting_values%*%covarience_matrix%*%starting_values)
mvp
mvp$value
starting_values%*%covarience_matrix%*%starting_values
mvp$par%*%covarience_matrix%*%mvp$par
sum(t(variance_vector)* starting_values^2, na.rm=TRUE)
mini_vector <- NULL
for (i in 1:number_of_shares)
{
mini <- min(var_data[,i], na.rm = TRUE)
mini_vector <- c(mini_vector, mini)
}
mini_vector
mini_vector[1]
mini_vector[2]
mini_vector[3]
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
mini_vector%*%starting_values
max_mini = optim(starting_values,function(starting_values) -1*mini_vector%*%starting_values)
mini_vector%*%max_mini$par  #### seems legit
setwd("~/GitHub/a-team/A-team/3.Draft")
library(optimx)
library(dplyr)
share_data=read.csv("Top40_28Jun2018_original.csv", header= TRUE, sep=";")
summary(share_data)
str(share_data)
View(share_data)
cols=ncol(share_data)
cols
for (i in 1:cols)
{
share_data[,i] <- recode_factor(share_data[,i], "#N/A N/A" = NA_character_)
}
(cols-1)/3
View(share_data)
summary(share_data)
str(share_data) #### fixed NA
for (i in 2:cols) ### 2 because first column are dates
{
x= share_data[,i]
share_data[,i] <- as.numeric(as.character(sub("," , ".", x)))
}
View(share_data)
summary(share_data)
str(share_data)
share_data[,1] <- as.Date(share_data[,1])
str(share_data)   #### coding dates as dates --> not sure I'll actually need this but just incase
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
length=nrow(share_data)
length
in_sample_length=0.8*length
in_sample_length
in_sample_length <- floor(in_sample_length)
in_sample_length
out_sample_start=in_sample_length+1
out_sample_start
in_sample=share_data[1:in_sample_length,]
View(in_sample)
out_sample=share_data[out_sample_start:length,]
View(out_sample)
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
select_shares = sample(0:(numb_dif_Share-1), 40)
select_shares
sequence_shares = c(1,(select_shares*3+2), (select_shares*3+3), (select_shares*3+4))
sequence_shares <- sort(sequence_shares, decreasing = FALSE)
sequence_shares
share_data_final <- share_data[,sequence_shares]
View(share_data_final)
share_data <- share_data_final #####!!!!!!!
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
setwd("~/GitHub/a-team/A-team/3.Draft")
library(dplyr)
share_data=read.csv("Top40_28Jun2018_original.csv", header= TRUE, sep=";")
summary(share_data)
str(share_data)
View(share_data)
cols=ncol(share_data)
cols
(cols-1)/3
for (i in 1:cols)
{
share_data[,i] <- recode_factor(share_data[,i], "#N/A N/A" = NA_character_)
}
View(share_data)
summary(share_data)
str(share_data) #### fixed NA
for (i in 2:cols) ### 2 because first column are dates
{
x= share_data[,i]
share_data[,i] <- as.numeric(as.character(sub("," , ".", x)))
}
View(share_data)
summary(share_data)
str(share_data)
share_data[,1] <- as.Date(share_data[,1])
str(share_data)   #### coding dates as dates --> not sure I'll actually need this but just incase
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
select_shares = sample(0:(numb_dif_Share-1), 40)
select_shares
sequence_shares = c(1,(select_shares*3+2), (select_shares*3+3), (select_shares*3+4))
sequence_shares <- sort(sequence_shares, decreasing = FALSE)
sequence_shares
share_data_final <- share_data[,sequence_shares]
View(share_data_final)
share_data <- share_data_final #####!!!!!!!
length=nrow(share_data)
length
in_sample_length=0.8*length
in_sample_length
in_sample_length <- floor(in_sample_length)
in_sample_length
out_sample_start=in_sample_length+1
out_sample_start
in_sample=share_data[1:in_sample_length,]
View(in_sample)
out_sample=share_data[out_sample_start:length,]
View(out_sample)
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j],  use = "na.or.complete")
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]   #### matches excel
covarience_matrix[2,2]   #### ditto
covarience_matrix[3,3]   #### ditto
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
starting_values
starting_values%*%covarience_matrix%*%starting_values
mvp = optim(starting_values,
function(starting_values) starting_values%*%covarience_matrix%*%starting_values)
setwd("~/GitHub/a-team/A-team/3.Draft")
library(dplyr)
share_data=read.csv("Top40_28Jun2018_no_purple_or_orange.csv", header= TRUE, sep=";")
summary(share_data)
str(share_data)
View(share_data)
cols=ncol(share_data)
cols
(cols-1)/3
for (i in 1:cols)
{
share_data[,i] <- recode_factor(share_data[,i], "#N/A N/A" = NA_character_)
}
View(share_data)
summary(share_data)
str(share_data) #### fixed NA
for (i in 2:cols) ### 2 because first column are dates
{
x= share_data[,i]
share_data[,i] <- as.numeric(as.character(sub("," , ".", x)))
}
View(share_data)
summary(share_data)
str(share_data)
share_data[,1] <- as.Date(share_data[,1])
str(share_data)   #### coding dates as dates --> not sure I'll actually need this but just incase
numb_dif_Share=(ncol(share_data)-1)/3
numb_dif_Share   #### seeing how many shares there are
set.seed(2018)
select_shares = sample(0:(numb_dif_Share-1), 40)
select_shares
sequence_shares = c(1,(select_shares*3+2), (select_shares*3+3), (select_shares*3+4))
sequence_shares <- sort(sequence_shares, decreasing = FALSE)
sequence_shares
share_data_final <- share_data[,sequence_shares]
View(share_data_final)
share_data <- share_data_final #####!!!!!!!
length=nrow(share_data)
length
in_sample_length=0.8*length
in_sample_length
in_sample_length <- floor(in_sample_length)
in_sample_length
out_sample_start=in_sample_length+1
out_sample_start
in_sample=share_data[1:in_sample_length,]
View(in_sample)
out_sample=share_data[out_sample_start:length,]
View(out_sample)
sequence_1=seq(from = 3, to = ncol(in_sample), by = 3)
sequence_1
var_data=in_sample[,sequence_1]
View(var_data)
summary(var_data)
number_of_shares=ncol(var_data)
number_of_shares
number_obs = nrow(var_data)
number_obs
covarience_vector <- NULL
covarience_matrix <- NULL
for (i in 1:number_of_shares)
{
for (j in 1:number_of_shares)
{
covariance <- cov(var_data[,i],var_data[,j],  use = "na.or.complete")
covarience_vector <- c(covarience_vector, covariance)
}
covarience_matrix <- cbind (covarience_matrix, covarience_vector)
covarience_vector <- NULL
}
View(covarience_matrix)
cov(var_data[,1],var_data[,2])
covarience_matrix[1,2]
covarience_matrix[1,1]   #### matches excel
covarience_matrix[2,2]   #### ditto
covarience_matrix[3,3]   #### ditto
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
starting_values
starting_values%*%covarience_matrix%*%starting_values
mvp = optim(starting_values,
function(starting_values) starting_values%*%covarience_matrix%*%starting_values)
mvp
mvp$value
starting_values%*%covarience_matrix%*%starting_values
mvp$par%*%covarience_matrix%*%mvp$par
mini_vector <- NULL
for (i in 1:number_of_shares)
{
mini <- min(var_data[,i], na.rm = TRUE)
mini_vector <- c(mini_vector, mini)
}
mini_vector
mini_vector[1]
mini_vector[2]
mini_vector[3]
start=1/number_of_shares
starting_values <- rep(start, number_of_shares)
mini_vector%*%starting_values
max_mini = optim(starting_values,function(starting_values) -1*mini_vector%*%starting_values)
mini_vector%*%max_mini$par  #### seems legit
